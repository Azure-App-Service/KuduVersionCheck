@functions {
    Dictionary<string, string> props = new Dictionary<string, string>();
    string siteExtFolder = @"D:\Program Files (x86)\SiteExtensions";

    void AddSiteExtension(string name, string folderName)
    {
        string extensionFolder = Path.Combine(siteExtFolder, folderName);
        if (Directory.Exists(extensionFolder))
        {
            string versionFolder = Directory.GetDirectories(extensionFolder).OrderByDescending(s => s).First();
            props[name] = Path.GetFileName(versionFolder);
        }
        else
        {
            props[name] = "none";
        }
    }
}

@{
    string kuduFolder = Directory.GetDirectories(Path.Combine(siteExtFolder, "Kudu")).OrderByDescending(s => s).First();

    string commitFile = Path.Combine(kuduFolder, "commit.txt");
    string commitId = System.IO.File.ReadAllText(commitFile).Substring(0, 8);

    var mwhAssembly = System.Reflection.Assembly.Load("Microsoft.Web.Hosting, Version=7.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");
    var fileVersionInfo = System.Diagnostics.FileVersionInfo.GetVersionInfo(mwhAssembly.Location);

    props["waws"] = fileVersionInfo.FileVersion;
    props["kudu"] = String.Format("{0} ({1})", Path.GetFileName(kuduFolder), commitId);

    AddSiteExtension("monaco", "Monaco");
    AddSiteExtension("zumo", "MobileServicesDotNet");
    AddSiteExtension("sb", "AzureJobs");

    props["time"] = File.GetCreationTimeUtc(mwhAssembly.Location).ToString();
}

{
    @foreach (var pair in props)
    {
    <text>@pair.Key: @pair.Value, </text>
    }
}
